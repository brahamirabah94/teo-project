# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python37:
      python.version: '3.7'

steps:
- script: |
      docker run --tty --volume $(System.DefaultWorkingDirectory)/terraform:/tf bridgecrew/checkov --directory /tf --output junitxml > $(System.DefaultWorkingDirectory)/tests/Checkov-tf-Report.xml
      sed -i '$d' $(System.DefaultWorkingDirectory)/tests/Checkov-tf-Report.xml
      sed -i '$d' $(System.DefaultWorkingDirectory)/tests/Checkov-tf-Report.xml

      docker run --tty --volume $(System.DefaultWorkingDirectory)/k8s-conf-spec:/k8s bridgecrew/checkov --directory /k8s --output junitxml > $(System.DefaultWorkingDirectory)/tests/Checkov-k8s-Report.xml
      sed -i '$d' $(System.DefaultWorkingDirectory)/tests/Checkov-k8s-Report.xml
      sed -i '$d' $(System.DefaultWorkingDirectory)/tests/Checkov-k8s-Report.xml

  displayName: Run Static Code analysis for Terraform & k8s using Checkov

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: 'Checkov-*.xml'
    searchFolder: '$(System.DefaultWorkingDirectory)/tests'

- task: UsePythonVersion@0
  condition: succeededOrFailed()
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r $(System.DefaultWorkingDirectory)/requirement.txt
  displayName: 'Install dependencies'
  condition: succeededOrFailed()


- script: |
    pip install pytest pytest-azurepipelines
    pytest  $(System.DefaultWorkingDirectory)/rng -rA --junitxml="Test-report-u.xml"
  displayName: 'pytest'
  condition: succeededOrFailed()


